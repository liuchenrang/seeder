@startuml
title IDFactory设计
class Stats {
  - int total
  +getTotal()
  +dig()
  +clear()
  -evnet()
}
class Monitor {
    Stats stats
    setVigilantValue()
    isOutVigilantValue()
    event(*IDBuffer, done chan<-int)
} 
class IDBuffer {
  - Stats stats 
  - int currentId
  - int maxId
  + factory()
  + getStats()
  + isUseOut()
  + getId()
  + flush(flush chan<-int)
  - DBGen gen
}
class IDBufferSegment{
    - IDBuffer currentIDBuffer
    - IDBuffer[] idList 
    - factory()
    - selectIdBuffer() IDBuffer
    - updateSegment()
    + getId() int
}
class IDBufferSegmentManager {
    - bufferPool <string bizTag,IDBufferSegment seg> 
    - getIDBufferSegmentByBizTag(string tag)
    - getIdBufferByTag(string tag)
    + getIdByBizTag(string tag)
}
class DBGen{
    bool create(string bizTag,int startId, int step, int bufferStep)
    int  getId(string bizTag, int step)
}
interface IDGen{
    bool create(string bizTag,int startId, int step, int bufferStep)
    int  getId(string bizTag, int step) 
}
class IDFactoryService{
    bool Register(string getnType, string biz_tag,int startId, int step, int bufferStep )
    int  makeId(string bizTag, int type)
        
}
class TypeIDMake{
    IDGen factory(string type)
}
DBGen --|> IDGen


@enduml
